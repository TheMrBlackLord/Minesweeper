{
  "openapi": "3.0.0",
  "info": {
    "title": "Minesweeper API",
    "description": "API for Minesweeper game",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api/"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations"
    },
    {
      "name": "User",
      "description": "User operations"
    },
    {
      "name": "Admin",
      "description": "Admin operations"
    }
  ],
  "paths": {
    "/admin/updateUser": {
      "patch": {
        "tags": [
          "Admin"
        ],
        "description": "Update user data",
        "operationId": "update_user",
        "parameters": [
          {
            "name": "authorization",
            "description": "Authorization header",
            "in": "header",
            "required": true,
            "schema": {
              "type": "Bearer <jwt acess token>"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "User role must be admin.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Update user data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Register a new user",
        "operationId": "register",
        "parameters": [],
        "responses": {
          "201": {
            "description": "User successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessAuth"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessAuth"
                }
              }
            }
          },
          "400": {
            "description": "Validation error or user already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Auth payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthPayload"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthPayload"
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Login user",
        "operationId": "login",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User successfully logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessAuth"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessAuth"
                }
              }
            }
          },
          "400": {
            "description": "Invalid auth payload.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Auth payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthPayload"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthPayload"
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Logout user",
        "operationId": "logout",
        "parameters": [
          {
            "name": "refreshToken",
            "description": "Refresh token",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessAuth"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessAuth"
                }
              }
            }
          },
          "401": {
            "description": "Refresh token is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Refresh tokens",
        "operationId": "refresh",
        "parameters": [
          {
            "name": "refreshToken",
            "description": "Refresh token",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token successfully refreshed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessAuth"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessAuth"
                }
              }
            }
          },
          "401": {
            "description": "Refresh token is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/all": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get all users",
        "operationId": "all_users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get all users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get current user",
        "operationId": "me",
        "parameters": [
          {
            "name": "authorization",
            "description": "Authorization header",
            "in": "header",
            "required": true,
            "schema": {
              "type": "Bearer <jwt acess token>"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get current user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get user by id",
        "operationId": "user_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "MongoDB id"
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/gameData/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get user game data",
        "operationId": "gameData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "MongoDB id"
          }
        ],
        "responses": {
          "200": {
            "description": "Get current user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GameData"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/game/win": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Add win game",
        "operationId": "winGame",
        "parameters": [
          {
            "name": "authorization",
            "description": "Authorization header",
            "in": "header",
            "required": true,
            "schema": {
              "type": "Bearer <jwt acess token>"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Win successfully added."
          },
          "500": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Win game data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinishGame"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/FinishGame"
              }
            }
          }
        }
      }
    },
    "/user/game/defeat": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Add lose game",
        "operationId": "defeatGame",
        "parameters": [
          {
            "name": "authorization",
            "description": "Authorization header",
            "in": "header",
            "required": true,
            "schema": {
              "type": "Bearer <jwt acess token>"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Defeat successfully added."
          },
          "500": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Lose game data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinishGame"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/FinishGame"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "MongoDB id"
          },
          "username": {
            "type": "string",
            "example": "username"
          },
          "role": {
            "default": "user",
            "type": "string",
            "enum": [
              "user",
              "admin"
            ]
          },
          "createdAt": {
            "type": "string",
            "example": "2022-07-15T14:48:21.027Z"
          }
        },
        "required": [
          "id",
          "username",
          "role",
          "createdAt"
        ],
        "xml": {
          "name": "User"
        }
      },
      "GameData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "MongoDB id"
          },
          "personalBest": {
            "type": "number",
            "example": 9007199254740991
          },
          "games": {
            "type": "array",
            "items": {
              "xml": {
                "name": "game"
              },
              "$ref": "#/components/schemas/Game"
            }
          },
          "totalWins": {
            "type": "number",
            "example": 0
          },
          "totalDefeats": {
            "type": "number",
            "example": 0
          }
        },
        "required": [
          "id",
          "personalBest",
          "games",
          "totalWins",
          "totalDefeats"
        ],
        "xml": {
          "name": "GameData"
        }
      },
      "Game": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "MongoDB id"
          },
          "timestamp": {
            "type": "string",
            "example": "2022-07-15T14:48:21.027Z"
          },
          "difficulty": {
            "type": "string",
            "enum": [
              "easy",
              "medium",
              "hard"
            ]
          },
          "time": {
            "type": "number",
            "example": 0
          },
          "isWin": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "difficulty",
          "time",
          "isWin"
        ],
        "xml": {
          "name": "Game"
        }
      },
      "AuthPayload": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "username"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "xml": {
          "name": "AuthPayload"
        }
      },
      "SuccessAuth": {
        "type": "object",
        "properties": {
          "tokens": {
            "xml": {
              "name": "tokens"
            },
            "$ref": "#/components/schemas/Tokens"
          },
          "user": {
            "xml": {
              "name": "user"
            },
            "$ref": "#/components/schemas/User"
          }
        },
        "xml": {
          "name": "SuccessAuth"
        }
      },
      "Tokens": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "jwt refreshToken"
          },
          "accessToken": {
            "type": "string",
            "example": "jwt accessToken"
          }
        },
        "required": [
          "refreshToken",
          "accessToken"
        ],
        "xml": {
          "name": "Tokens"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "error message"
          },
          "errors": {
            "type": "array",
            "example": [],
            "items": {}
          }
        },
        "required": [
          "message"
        ],
        "xml": {
          "name": "Error"
        }
      },
      "FinishGame": {
        "type": "object",
        "properties": {
          "difficulty": {
            "type": "string",
            "enum": [
              "easy",
              "medium",
              "hard"
            ]
          },
          "time": {
            "type": "number",
            "example": 0
          }
        },
        "required": [
          "difficulty",
          "time"
        ],
        "xml": {
          "name": "FinishGame"
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "MongoDB id"
          },
          "updates": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "example": "username"
              },
              "password": {
                "type": "string",
                "example": "password"
              },
              "role": {
                "type": "string",
                "enum": [
                  "user",
                  "admin"
                ]
              }
            }
          }
        },
        "required": [
          "id",
          "updates"
        ],
        "xml": {
          "name": "UpdateUser"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}